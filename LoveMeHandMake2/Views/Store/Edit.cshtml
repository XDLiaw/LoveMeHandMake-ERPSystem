@model LoveMeHandMake2.Models.Store

@{
    ViewBag.Title = "编辑门市";
}

<h2>编辑门市</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.StoreCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StoreCode)
            @Html.ValidationMessageFor(model => model.StoreCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OverThresholdBonus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OverThresholdBonus)
            @Html.ValidationMessageFor(model => model.OverThresholdBonus)
        </div>
        <div class="editor-label">
            @Html.DisplayNameFor(model => model.StoreCanSellCategories)
        </div>
        <div class="editor-field">
           @foreach (var cat in ViewBag.categories)
           {
               if (Model.IsSellableCategory(cat.ID))
               {
                   <div class="col-md-4"><input type="checkbox" name="@("category_"+cat.ID)" value="@cat.ID" checked> @cat.Name</div>
               }
               else
               {
                   <div class="col-md-4"><input type="checkbox" name="@("category_"+cat.ID)" value="@cat.ID"> @cat.Name</div>
               }
           }
        </div>


        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(nidek => Model.CreateTime)
        @Html.HiddenFor(nidek => Model.UpdateTime)
        @Html.HiddenFor(nidek => Model.ValidFlag)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
