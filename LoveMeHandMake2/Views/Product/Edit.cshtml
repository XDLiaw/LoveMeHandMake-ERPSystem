@model LoveMeHandMake2.Models.ViewModels.ProductViewModel
@using LoveMeHandMake2.Helper

@{
    ViewBag.Title = "修改产品";
}

<h2>修改</h2>
@Styles.Render("~/Content/fileBrowseBtn")

@using (Html.BeginForm("EditSubmit", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-edit"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>产品</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.product.ID)
        @Html.HiddenFor(model => model.product.CreateTime)
        @Html.HiddenFor(model => model.product.UpdateTime)
        @Html.HiddenFor(model => model.product.ValidFlag)
        @Html.HiddenFor(model => model.product.ImageName)

        <div class="form-group">
            @Html.LabelFor(model => model.product.ProductCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.product.ProductCategoryID, (IEnumerable<SelectListItem>)ViewBag.ProductCategoryList, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownList("ProductCategoryID", (IEnumerable<SelectListItem>)ViewBag.ProductCategoryList, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.product.ProductCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="productImage" src="data:image;base64,@ProductImageHelper.GetImageBase64String(Model.product.ImageName)" style="max-width:100px; max-height:100px;" />
                <p>
                    <span class="btn btn-default btn-file">
                        Browse
                        @Html.TextBoxFor(model => model.product.UploadImage, new { Type = "file", id = "btn_choseImage", @class = "upload", onchange = "readURL(this);" })
                    </span>
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.IsPullFromShelves, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.IsPullFromShelves)
                @Html.ValidationMessageFor(model => model.product.IsPullFromShelves, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("Index", "Product", FormMethod.Post, new { id = "form-backToIndex" }))
{  
    @Html.HiddenFor(model => model.productCategoryID)
    @Html.HiddenFor(model => model.searchName)
    @Html.HiddenFor(model => model.searchPrice)
    @Html.HiddenFor(model => model.PageNumber)
    @Html.HiddenFor(model => model.PageSize)

    <div>
        <input type="submit" class="grayBtn btn-link" id="btn-back" value="Back to List" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {
        addSearchConditionHiddenToForm();
    });
</script>
<script>
    function addSearchConditionHiddenToForm() {
        $("#form-backToIndex input[type=hidden]").each(function (index) {
            $("#form-edit").append($(this).clone());
        });
    }
</script>
<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#productImage').attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
