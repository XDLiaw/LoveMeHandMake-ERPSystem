@model LoveMeHandMake2.Models.ViewModels.ProductViewModel
@using LoveMeHandMake2.Helper

@{
    ViewBag.Title = "产品";
}

<h2>产品</h2>

@using (Html.BeginForm("Index", "Product", FormMethod.Post))
{
    <div class="container breadcrumb">

        <div class="col-md-3">
            @Html.ActionLink("新增产品", "Create", null, new { @class = "btn btn-primary" })
            @Html.ActionLink("批次汇入产品", "BatchImport", null, new { @class = "btn btn-primary" })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.searchName, new { htmlAttributes = new { @class = "form-control ", placeholder = @Html.DisplayNameFor(model => model.searchName) } })
        </div>
        <div class="col-md-2">
            @Html.EditorFor(model => model.searchPrice, new { htmlAttributes = new { @class = "form-control ", placeholder = @Html.DisplayNameFor(model => model.searchPrice) } })
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.productCategoryID, (IEnumerable<SelectListItem>)ViewBag.ProductCategoryList, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <input type="submit" value="搜寻" class="btn btn-default" id="btn-search" />
        </div>
    </div>

    <p></p>

    <table class="table table-striped table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().ImageName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().ProductCategory.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().IsPullFromShelves)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductList.FirstOrDefault().Remark)
            </th>
            <th></th>
        </tr>

        @if (Model != null)
        {
            foreach (var item in Model.ProductList)
            {
                <tr>
                    <td>
                        <img src="data:image;base64,@ProductImageHelper.GetImageBase64String(item.ImageName)" style="max-width:100px; max-height:100px;" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCategory.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                        @if (item.ProductCategory.Unit == 1)
                        {
                            @Html.Label("点");
                        }
                        else if (item.ProductCategory.Unit == 2)
                        {
                            @Html.Label("豆");
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsPullFromShelves)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remark)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        }
    </table>

    @Html.HiddenFor(model => model.PageNumber)
    <ul class="pagination">
        @if (Model != null && Model.ProductList != null)
        {
            <li class=""><input type="submit" value=&laquo; class="btn-previous-page" /></li>
            for (int i = 1; i <= Model.ProductList.PageCount; i++)
            {
                <li><input type="submit" value=@i class="btn-page" /></li>
            }
            <li class=""><input type="submit" value=&raquo; class="btn-next-page" /></li>
            <text>Displaying @Model.ProductList.ItemStart - @Model.ProductList.ItemEnd of @Model.ProductList.TotalItemCount item(s)</text>
        }
    </ul>
}



<script>
    $(document).ready(function () {
        $("ul > li > input").addClass("btn btn-default btn-sm");
        $("ul > li > input.btn-page").click(function () {
            $("#PageNumber").val($(this).attr("value"));
            return true;
        });
        $("ul > li > input.btn-page:eq(@Model.ProductList.PageIndex)").addClass("active");
        $("ul > li > input.btn-previous-page").click(function () {
            if (@Model.ProductList.PageIndex > 0) {
                $("#PageNumber").val(@Model.ProductList.PageNumber -1);
                return true;
            }
            else {
                return false;
            }
        });
        $("ul > li > input.btn-next-page").click(function () {
            if ((@Model.ProductList.PageIndex) < (@Model.ProductList.PageCount-1)) {
                $("#PageNumber").val(@Model.ProductList.PageNumber + 1);
                return true;
            }
            else {
                return false;
            }
        });
        $("#btn-search").click(function(){
            $("#PageNumber").val(1);
            return true;
        });
    });
</script>

