@model LoveMeHandMake2.Models.ViewModels.PopularProductViewModel
@using LoveMeHandMake2.Helper

@{
    ViewBag.Title = "热门产品";
}

<h2>热门产品</h2>


@using (Html.BeginForm("Index", "PopularProduct", FormMethod.Post))
{
    <div class="container breadcrumb">
        <div class="col-md-3">
            @Html.DropDownList("SearchStoreID", (IEnumerable<SelectListItem>)ViewBag.StoreList, htmlAttributes: new { id = "SearchStoreID", @class = "form-control" })
        </div>
        <div class="col-md-3">
            @Html.DropDownList("SearchProductCategoryID", (IEnumerable<SelectListItem>)ViewBag.ProductCategoryList, htmlAttributes: new { id = "SearchProductCategoryID", @class = "form-control" })
        </div>
        <div class="col-md-2">
            @Html.EditorFor(model => model.SearchDateStart, new { htmlAttributes = new { id = "SearchDateStart", name = "SearchDateStart", @class = "form-control calendarBox", placeholder = "日期(起)" } })
        </div>
        <div class="col-md-2">
            @Html.EditorFor(model => model.SearchDateEnd, new { htmlAttributes = new { id = "SearchDateEnd", name = "SearchDateEnd", @class = "form-control calendarBox", placeholder = "日期(讫)" } })
        </div>
        <div class="col-md-2">
            <input type="submit" value="搜寻" class="btn btn-default" id="btn-search" />
        </div>
    </div>


    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.productPagedList.FirstOrDefault().ImageName)</th>
                <th>@Html.DisplayNameFor(model => model.productPagedList.FirstOrDefault().CategoryName)</th>
                <th>@Html.DisplayNameFor(model => model.productPagedList.FirstOrDefault().Name)</th>
                <th>@Html.DisplayNameFor(model => model.productPagedList.FirstOrDefault().Price)</th>
                <th>@Html.DisplayNameFor(model => model.productPagedList.FirstOrDefault().Amount)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.productPagedList != null)
            {
                foreach (var item in Model.productPagedList)
                {
                    <tr>                    
                        <td><img src="data:image;base64,@ProductImageHelper.GetImageBase64String(item.ImageName)" style="max-width:100px; max-height:100px;" /></td>
                        <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                            @(item.Unit == 1 ? "点" : "豆")
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @Html.HiddenFor(model => model.PageNumber)
    <ul class="pagination">
        @if (Model != null && Model.productPagedList != null)
        {
            <li class=""><input type="submit" value=&laquo; class="btn-previous-page" /></li>
            for (int i = 1; i <= Model.productPagedList.PageCount; i++)
            {
                <li><input type="submit" value=@i class="btn-page" /></li>
            }
            <li class=""><input type="submit" value=&raquo; class="btn-next-page" /></li>
            <text>Displaying @Model.productPagedList.ItemStart - @Model.productPagedList.ItemEnd of @Model.productPagedList.TotalItemCount item(s)</text>
        }
    </ul>
    
}


<script>
    $(document).ready(function () {
        $("ul > li > input").addClass("btn btn-default btn-sm");
        $("ul > li > input.btn-page").click(function () {
            $("#PageNumber").val($(this).attr("value"));
            return true;
        });
        $("ul > li > input.btn-page:eq(@Model.productPagedList.PageIndex)").addClass("active");
        $("ul > li > input.btn-previous-page").click(function () {
            if (@Model.productPagedList.PageIndex > 0) {
                $("#PageNumber").val(@Model.productPagedList.PageNumber -1);
                return true;
            }
            else {
                return false;
            }
        });
        $("ul > li > input.btn-next-page").click(function () {
            if ((@Model.productPagedList.PageIndex) < (@Model.productPagedList.PageCount-1)) {
                $("#PageNumber").val(@Model.productPagedList.PageNumber + 1);
                return true;
            }
            else {
                return false;
            }
        });
        $("#btn-search").click(function(){
            $("#PageNumber").val(1);
            return true;
        });
    });
</script>