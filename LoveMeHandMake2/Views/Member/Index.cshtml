@model LoveMeHandMake2.Models.ViewModels.MemberListViewModel

@{
    ViewBag.Title = "会员";
}

<h2>会员</h2>


@using (Html.BeginForm("Index", "Member", FormMethod.Post))
{
    <div class="container breadcrumb">
        <div class="col-md-2">
            @Html.ActionLink("新增会员", "Create", null, new { @class = "btn btn-primary" })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.searchName, new { htmlAttributes = new { @class = "form-control ", placeholder = @Html.DisplayNameFor(model => model.searchName) } })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.searchPhone, new { htmlAttributes = new { @class = "form-control ", placeholder = @Html.DisplayNameFor(model => model.searchPhone) } })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.searchCardID, new { htmlAttributes = new { @class = "form-control ", placeholder = @Html.DisplayNameFor(model => model.searchCardID) } })
        </div>
        <div class="col-md-1">
            <input type="submit" value="搜寻" class="btn btn-default" id="btn-search" />
        </div>
    </div>


    <table class="table table-striped table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().CardID)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().Birthday)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().Phone)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().IsPRCard)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().Point)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.memberPagedList.FirstOrDefault().AccumulateDeposit)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.memberPagedList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CardID)
                </td>
                <td class="text-center">
                    @Html.Label(item.Gender ? "男" : "女")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.IsPRCard)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Point)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.AccumulateDeposit)
                </td>
                <td>
                    @Html.ActionLink("转点", "TransferPoint", new { id = item.ID }) |
                    @Html.ActionLink("储值", "Deposit", new { id = item.ID }) |
                    @Html.ActionLink("储值纪录", "DepositHistory", new { id = item.ID }) |
                    @Html.ActionLink("消费纪录", "TradeHistory", new { id = item.ID }) |
                    @Html.ActionLink("修改", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("明细", "Details", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
    
    
    @Html.HiddenFor(model => model.PageNumber)
    <ul class="pagination">
        @if (Model != null && Model.memberPagedList != null)
        {
            <li class=""><input type="submit" value=&laquo; class="btn-previous-page" /></li>
            for (int i = 1; i <= Model.memberPagedList.PageCount; i++)
            {
                <li><input type="submit" value=@i class="btn-page" /></li>
            }
            <li class=""><input type="submit" value=&raquo; class="btn-next-page" /></li>
            <text>Displaying @Model.memberPagedList.ItemStart - @Model.memberPagedList.ItemEnd of @Model.memberPagedList.TotalItemCount item(s)</text>
        }
    </ul>

}

<script>
    $(document).ready(function () {
        $("ul > li > input").addClass("btn btn-default btn-sm");
        $("ul > li > input.btn-page").click(function () {
            $("#PageNumber").val($(this).attr("value"));
            return true;
        });
        $("ul > li > input.btn-page:eq(@Model.memberPagedList.PageIndex)").addClass("active");
        $("ul > li > input.btn-previous-page").click(function () {
            if (@Model.memberPagedList.PageIndex > 0) {
                $("#PageNumber").val(@Model.memberPagedList.PageNumber -1);
                return true;
            }
            else {
                return false;
            }
        });
        $("ul > li > input.btn-next-page").click(function () {
            if ((@Model.memberPagedList.PageIndex) < (@Model.memberPagedList.PageCount-1)) {
                $("#PageNumber").val(@Model.memberPagedList.PageNumber + 1);
                return true;
            }
            else {
                return false;
            }
        });
        $("#btn-search").click(function(){
            $("#PageNumber").val(1);
            return true;
        });
    });
</script>